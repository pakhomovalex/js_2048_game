{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_class_private_field_get.js","node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js","node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js","node_modules/@swc/helpers/esm/_class_private_field_init.js","node_modules/@swc/helpers/esm/_check_private_redeclaration.js","node_modules/@swc/helpers/esm/_class_private_method_get.js","node_modules/@swc/helpers/esm/_class_private_method_init.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $ac3905202f0710b7$export$184ff5d81c0e5775(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n    return descriptor.value;\n}\n\n\nfunction $753de3cb5925592a$export$20c20a422940e173(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    return privateMap.get(receiver);\n}\n\n\nfunction $2f97c2a4ea6269f4$export$5a67b255b80ee4f2(receiver, privateMap) {\n    var descriptor = (0, $753de3cb5925592a$export$20c20a422940e173)(receiver, privateMap, \"get\");\n    return (0, $ac3905202f0710b7$export$184ff5d81c0e5775)(receiver, descriptor);\n}\n\n\nfunction $f86983e96b0c893e$export$6b10452b5ac97eba(obj, privateCollection) {\n    if (privateCollection.has(obj)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n}\n\n\nfunction $5d6c3530fa14a187$export$e235798705076415(obj, privateMap, value) {\n    (0, $f86983e96b0c893e$export$6b10452b5ac97eba)(obj, privateMap);\n    privateMap.set(obj, value);\n}\n\n\nfunction $ac6739cbe5bf1c84$export$ccedaf978f62b9dd(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n    return fn;\n}\n\n\n\nfunction $ea91727f98d0802f$export$1002c20f28174dbf(obj, privateSet) {\n    (0, $f86983e96b0c893e$export$6b10452b5ac97eba)(obj, privateSet);\n    privateSet.add(obj);\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$startMessage = document.querySelector(\".message-start\");\nvar $3d28d7f1aac198f5$var$loseMessage = document.querySelector(\".message-lose\");\nvar $3d28d7f1aac198f5$var$winMessage = document.querySelector(\".message-win\");\nvar $3d28d7f1aac198f5$var$_DEFAULT_STATE = /*#__PURE__*/ new WeakMap(), // #DEFAULT_STATE = [\n//   [1, 1, 1, 1],\n//   [2, 2, 2, 2],\n//   [3, 3, 3, 3],\n//   [0, 0, 0, 0],\n// ];\n// #DEFAULT_STATE = [\n//   [1, 1, 1, 1],\n//   [2, 2, 2, 2],\n//   [0, 0, 0, 0],\n//   [0, 0, 0, 0],\n// ];\n$3d28d7f1aac198f5$var$_copyState = /*#__PURE__*/ new WeakSet();\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_copyState, $3d28d7f1aac198f5$var$copyState).call(this, (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_DEFAULT_STATE));\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        (0, $ea91727f98d0802f$export$1002c20f28174dbf)(this, $3d28d7f1aac198f5$var$_copyState);\n        (0, $5d6c3530fa14a187$export$e235798705076415)(this, $3d28d7f1aac198f5$var$_DEFAULT_STATE, {\n            writable: true,\n            value: [\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ],\n                [\n                    0,\n                    0,\n                    0,\n                    0\n                ]\n            ]\n        });\n        this.matrix = initialState;\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                if (this.getStatus() !== \"playing\") return;\n                var isChange = false;\n                this.matrix = this.matrix.map(function(group) {\n                    for(var i = 1; i < 4; i++)while(group[i - 1] === 0 && group[i] !== 0){\n                        group[i - 1] = group[i];\n                        group[i] = 0;\n                        isChange = true;\n                        i--;\n                    }\n                    for(var i1 = 1; i1 < group.length; i1++)if (group[i1] === group[i1 - 1] && group[i1] !== 0) {\n                        group[i1 - 1] = group[i1] + group[i1 - 1];\n                        _this.score += group[i1 - 1];\n                        group[i1] = 0;\n                        isChange = true;\n                        i1--;\n                    }\n                    for(var i2 = 1; i2 < 4; i2++)while(group[i2 - 1] === 0 && group[i2] !== 0){\n                        group[i2 - 1] = group[i2];\n                        group[i2] = 0;\n                        isChange = true;\n                        i2--;\n                    }\n                    return group;\n                });\n                if (isChange) this.createRandomTile();\n                this.drawTiles();\n                this.getStatus();\n                this.winOrLose();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                if (this.getStatus() !== \"playing\") return;\n                var isChange = false;\n                this.matrix = this.matrix.map(function(group) {\n                    for(var i = 2; i >= 0; i--)while(group[i + 1] === 0 && group[i] !== 0){\n                        group[i + 1] = group[i];\n                        group[i] = 0;\n                        isChange = true;\n                        i++;\n                    }\n                    for(var i1 = group.length - 2; i1 >= 0; i1--)if (group[i1] === group[i1 + 1] && group[i1] !== 0) {\n                        group[i1 + 1] = group[i1] + group[i1 + 1];\n                        _this.score += group[i1 + 1];\n                        group[i1] = 0;\n                        isChange = true;\n                        i1++;\n                    }\n                    for(var i2 = 2; i2 >= 0; i2--)while(group[i2 + 1] === 0 && group[i2] !== 0){\n                        group[i2 + 1] = group[i2];\n                        group[i2] = 0;\n                        isChange = true;\n                        i2++;\n                    }\n                    return group;\n                });\n                if (isChange) this.createRandomTile();\n                this.drawTiles();\n                this.getStatus();\n                this.winOrLose();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                if (this.getStatus() !== \"playing\") return;\n                var isChange = false;\n                var slidedMatrix = this.getMatrixGroupedByCols().map(function(group) {\n                    for(var i = 1; i < 4; i++)while(group[i - 1] === 0 && group[i] !== 0){\n                        group[i - 1] = group[i];\n                        group[i] = 0;\n                        isChange = true;\n                        i--;\n                    }\n                    for(var i1 = 1; i1 < group.length; i1++)if (group[i1] === group[i1 - 1] && group[i1] !== 0) {\n                        group[i1 - 1] = group[i1] + group[i1 - 1];\n                        _this.score += group[i1 - 1];\n                        group[i1] = 0;\n                        isChange = true;\n                        i1--;\n                    }\n                    for(var i2 = 1; i2 < 4; i2++)while(group[i2 - 1] === 0 && group[i2] !== 0){\n                        group[i2 - 1] = group[i2];\n                        group[i2] = 0;\n                        isChange = true;\n                        i2--;\n                    }\n                    return group;\n                });\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++)this.matrix[i][j] = slidedMatrix[j][i];\n                if (isChange) this.createRandomTile();\n                this.drawTiles();\n                this.getStatus();\n                this.winOrLose();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                if (this.getStatus() !== \"playing\") return;\n                var isChange = false;\n                var slidedMatrix = this.getMatrixGroupedByCols().map(function(group) {\n                    for(var i = 2; i >= 0; i--)while(group[i + 1] === 0 && group[i] !== 0){\n                        isChange = true;\n                        group[i + 1] = group[i];\n                        group[i] = 0;\n                        i++;\n                    }\n                    for(var i1 = group.length - 2; i1 >= 0; i1--)if (group[i1] === group[i1 + 1] && group[i1] !== 0) {\n                        isChange = true;\n                        group[i1 + 1] = group[i1] + group[i1 + 1];\n                        _this.score += group[i1 + 1];\n                        group[i1] = 0;\n                        i1++;\n                    }\n                    for(var i2 = 2; i2 >= 0; i2--)while(group[i2 + 1] === 0 && group[i2] !== 0){\n                        isChange = true;\n                        group[i2 + 1] = group[i2];\n                        group[i2] = 0;\n                        i2++;\n                    }\n                    return group;\n                });\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++)this.matrix[i][j] = slidedMatrix[j][i];\n                if (isChange) this.createRandomTile();\n                this.drawTiles();\n                this.getStatus();\n                this.winOrLose();\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.matrix;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                switch(this.status){\n                    case \"idle\":\n                        $3d28d7f1aac198f5$var$startMessage.classList.remove(\"hidden\");\n                        $3d28d7f1aac198f5$var$loseMessage.classList.add(\"hidden\");\n                        $3d28d7f1aac198f5$var$winMessage.classList.add(\"hidden\");\n                        break;\n                    case \"playing\":\n                        $3d28d7f1aac198f5$var$startMessage.classList.add(\"hidden\");\n                        $3d28d7f1aac198f5$var$loseMessage.classList.add(\"hidden\");\n                        $3d28d7f1aac198f5$var$winMessage.classList.add(\"hidden\");\n                        break;\n                    case \"win\":\n                        $3d28d7f1aac198f5$var$winMessage.classList.remove(\"hidden\");\n                        break;\n                    case \"lose\":\n                        $3d28d7f1aac198f5$var$loseMessage.classList.remove(\"hidden\");\n                        break;\n                    default:\n                        break;\n                }\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.createRandomTile();\n                this.createRandomTile();\n                this.status = \"playing\";\n                this.getStatus();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.matrix = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_copyState, $3d28d7f1aac198f5$var$copyState).call(this, (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_DEFAULT_STATE));\n                this.status = \"idle\";\n                this.getStatus();\n                this.clearMatrix();\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"createRandomTile\",\n            value: function createRandomTile() {\n                var randomDigit = Math.random() < 0.9 ? 2 : 4;\n                var getEmptyTiles = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.matrix[i][j] === 0) getEmptyTiles.push([\n                        i,\n                        j\n                    ]);\n                }\n                var randomEmptyTile = Math.floor(Math.random() * getEmptyTiles.length);\n                var coordinateEmptyTile = getEmptyTiles[randomEmptyTile];\n                this.matrix[coordinateEmptyTile[0]][coordinateEmptyTile[1]] = randomDigit;\n                // edit HTML element\n                var getRowWithEmptyTile = document.querySelector(\".field-row:nth-child(\".concat(coordinateEmptyTile[0] + 1, \")\"));\n                var emptyTile = getRowWithEmptyTile.querySelector(\".field-cell:nth-child(\".concat(coordinateEmptyTile[1] + 1, \")\"));\n                emptyTile.textContent = randomDigit;\n                emptyTile.classList.add(\"field-cell--\".concat(randomDigit));\n                emptyTile.style.transition = \".5s\";\n            }\n        },\n        {\n            key: \"getMatrixGroupedByCols\",\n            value: function getMatrixGroupedByCols() {\n                var groupedMatrix = (0, $ac6739cbe5bf1c84$export$ccedaf978f62b9dd)(this, $3d28d7f1aac198f5$var$_copyState, $3d28d7f1aac198f5$var$copyState).call(this, (0, $2f97c2a4ea6269f4$export$5a67b255b80ee4f2)(this, $3d28d7f1aac198f5$var$_DEFAULT_STATE));\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++)groupedMatrix[j][i] = this.matrix[i][j];\n                return groupedMatrix;\n            }\n        },\n        {\n            key: \"clearMatrix\",\n            value: function clearMatrix() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    var getRow = document.querySelector(\".field-row:nth-child(\".concat(i + 1, \")\"));\n                    var tile = getRow.querySelector(\".field-cell:nth-child(\".concat(j + 1, \")\"));\n                    tile.textContent = \"\";\n                    tile.className = \"field-cell\";\n                }\n            }\n        },\n        {\n            key: \"drawTiles\",\n            value: function drawTiles() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    var getRow = document.querySelector(\".field-row:nth-child(\".concat(i + 1, \")\"));\n                    var tile = getRow.querySelector(\".field-cell:nth-child(\".concat(j + 1, \")\"));\n                    tile.textContent = \"\";\n                    tile.className = \"field-cell\";\n                    if (this.matrix[i][j] !== 0) {\n                        tile.textContent = \"\".concat(this.matrix[i][j]);\n                        tile.classList.add(\"field-cell--\".concat(this.matrix[i][j]));\n                    }\n                }\n            }\n        },\n        {\n            key: \"movesAvailable\",\n            value: function movesAvailable(grid) {\n                var size = grid.length;\n                // Check for empty cells\n                for(var row = 0; row < size; row++)for(var col = 0; col < size; col++){\n                    if (grid[row][col] === 0) return true;\n                }\n                // Check for possible merges\n                for(var row1 = 0; row1 < size; row1++)for(var col1 = 0; col1 < size; col1++){\n                    if (col1 < size - 1 && grid[row1][col1] === grid[row1][col1 + 1]) return true; // horizontally\n                    if (row1 < size - 1 && grid[row1][col1] === grid[row1 + 1][col1]) return true; // vertically\n                }\n                return false;\n            }\n        },\n        {\n            key: \"winOrLose\",\n            value: function winOrLose() {\n                if (!this.movesAvailable(this.matrix)) this.status = \"lose\";\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.matrix[i][j] === 2048) this.status = \"win\";\n                }\n            }\n        }\n    ]);\n    return Game;\n}();\nfunction $3d28d7f1aac198f5$var$copyState(state) {\n    return state.map(function(arr) {\n        return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(arr);\n    });\n}\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\n// Write your code here\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$restartBtn = document.querySelector(\".restart\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\n// eslint-disable-next-line no-shadow\nvar $197cd56b15c33885$var$arrowsToggle = function(event) {\n    switch(event.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        default:\n            return;\n    }\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.score;\n};\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$startBtn.classList.add(\"hidden\");\n    $197cd56b15c33885$var$restartBtn.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$game.start();\n    document.addEventListener(\"keydown\", $197cd56b15c33885$var$arrowsToggle);\n});\n$197cd56b15c33885$var$restartBtn.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$restartBtn.classList.add(\"hidden\");\n    $197cd56b15c33885$var$startBtn.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.score = 0;\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.score;\n    document.removeEventListener(\"keydown\", $197cd56b15c33885$var$arrowsToggle);\n});\n\n})();\n//# sourceMappingURL=index.9f9d958d.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\n// Write your code here\nconst startBtn = document.querySelector('.start');\nconst restartBtn = document.querySelector('.restart');\n\nconst score = document.querySelector('.game-score');\n\n// eslint-disable-next-line no-shadow\nconst arrowsToggle = (event) => {\n  switch (event.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    default:\n      return;\n  }\n\n  score.textContent = game.score;\n};\n\nstartBtn.addEventListener('click', () => {\n  startBtn.classList.add('hidden');\n  restartBtn.classList.remove('hidden');\n\n  game.start();\n\n  document.addEventListener('keydown', arrowsToggle);\n});\n\nrestartBtn.addEventListener('click', () => {\n  restartBtn.classList.add('hidden');\n  startBtn.classList.remove('hidden');\n\n  game.restart();\n\n  game.score = 0;\n  score.textContent = game.score;\n\n  document.removeEventListener('keydown', arrowsToggle);\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nconst startMessage = document.querySelector('.message-start');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\n\nclass Game {\n  #DEFAULT_STATE = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  // #DEFAULT_STATE = [\n  //   [1, 1, 1, 1],\n  //   [2, 2, 2, 2],\n  //   [3, 3, 3, 3],\n  //   [0, 0, 0, 0],\n  // ];\n\n  // #DEFAULT_STATE = [\n  //   [1, 1, 1, 1],\n  //   [2, 2, 2, 2],\n  //   [0, 0, 0, 0],\n  //   [0, 0, 0, 0],\n  // ];\n\n  #copyState(state) {\n    return state.map((arr) => [...arr]);\n  }\n\n  constructor(initialState = this.#copyState(this.#DEFAULT_STATE)) {\n    this.matrix = initialState;\n\n    this.status = 'idle';\n\n    this.score = 0;\n  }\n\n  moveLeft() {\n    if (this.getStatus() !== 'playing') {\n      return;\n    }\n\n    let isChange = false;\n\n    this.matrix = this.matrix.map((group) => {\n      for (let i = 1; i < 4; i++) {\n        while (group[i - 1] === 0 && group[i] !== 0) {\n          group[i - 1] = group[i];\n          group[i] = 0;\n          isChange = true;\n          i--;\n        }\n      }\n\n      for (let i = 1; i < group.length; i++) {\n        if (group[i] === group[i - 1] && group[i] !== 0) {\n          group[i - 1] = group[i] + group[i - 1];\n          this.score += group[i - 1];\n          group[i] = 0;\n          isChange = true;\n          i--;\n        }\n      }\n\n      for (let i = 1; i < 4; i++) {\n        while (group[i - 1] === 0 && group[i] !== 0) {\n          group[i - 1] = group[i];\n          group[i] = 0;\n          isChange = true;\n          i--;\n        }\n      }\n\n      return group;\n    });\n\n    if (isChange) {\n      this.createRandomTile();\n    }\n\n    this.drawTiles();\n\n    this.getStatus();\n\n    this.winOrLose();\n  }\n  moveRight() {\n    if (this.getStatus() !== 'playing') {\n      return;\n    }\n\n    let isChange = false;\n\n    this.matrix = this.matrix.map((group) => {\n      for (let i = 2; i >= 0; i--) {\n        while (group[i + 1] === 0 && group[i] !== 0) {\n          group[i + 1] = group[i];\n          group[i] = 0;\n          isChange = true;\n          i++;\n        }\n      }\n\n      for (let i = group.length - 2; i >= 0; i--) {\n        if (group[i] === group[i + 1] && group[i] !== 0) {\n          group[i + 1] = group[i] + group[i + 1];\n          this.score += group[i + 1];\n          group[i] = 0;\n          isChange = true;\n          i++;\n        }\n      }\n\n      for (let i = 2; i >= 0; i--) {\n        while (group[i + 1] === 0 && group[i] !== 0) {\n          group[i + 1] = group[i];\n          group[i] = 0;\n          isChange = true;\n          i++;\n        }\n      }\n\n      return group;\n    });\n\n    if (isChange) {\n      this.createRandomTile();\n    }\n\n    this.drawTiles();\n\n    this.getStatus();\n\n    this.winOrLose();\n  }\n  moveUp() {\n    if (this.getStatus() !== 'playing') {\n      return;\n    }\n\n    let isChange = false;\n\n    const slidedMatrix = this.getMatrixGroupedByCols().map((group) => {\n      for (let i = 1; i < 4; i++) {\n        while (group[i - 1] === 0 && group[i] !== 0) {\n          group[i - 1] = group[i];\n          group[i] = 0;\n          isChange = true;\n          i--;\n        }\n      }\n\n      for (let i = 1; i < group.length; i++) {\n        if (group[i] === group[i - 1] && group[i] !== 0) {\n          group[i - 1] = group[i] + group[i - 1];\n          this.score += group[i - 1];\n          group[i] = 0;\n          isChange = true;\n          i--;\n        }\n      }\n\n      for (let i = 1; i < 4; i++) {\n        while (group[i - 1] === 0 && group[i] !== 0) {\n          group[i - 1] = group[i];\n          group[i] = 0;\n          isChange = true;\n          i--;\n        }\n      }\n\n      return group;\n    });\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.matrix[i][j] = slidedMatrix[j][i];\n      }\n    }\n\n    if (isChange) {\n      this.createRandomTile();\n    }\n\n    this.drawTiles();\n\n    this.getStatus();\n\n    this.winOrLose();\n  }\n  moveDown() {\n    if (this.getStatus() !== 'playing') {\n      return;\n    }\n\n    let isChange = false;\n\n    const slidedMatrix = this.getMatrixGroupedByCols().map((group) => {\n      for (let i = 2; i >= 0; i--) {\n        while (group[i + 1] === 0 && group[i] !== 0) {\n          isChange = true;\n          group[i + 1] = group[i];\n          group[i] = 0;\n          i++;\n        }\n      }\n\n      for (let i = group.length - 2; i >= 0; i--) {\n        if (group[i] === group[i + 1] && group[i] !== 0) {\n          isChange = true;\n          group[i + 1] = group[i] + group[i + 1];\n          this.score += group[i + 1];\n          group[i] = 0;\n          i++;\n        }\n      }\n\n      for (let i = 2; i >= 0; i--) {\n        while (group[i + 1] === 0 && group[i] !== 0) {\n          isChange = true;\n          group[i + 1] = group[i];\n          group[i] = 0;\n          i++;\n        }\n      }\n\n      return group;\n    });\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.matrix[i][j] = slidedMatrix[j][i];\n      }\n    }\n\n    if (isChange) {\n      this.createRandomTile();\n    }\n\n    this.drawTiles();\n\n    this.getStatus();\n\n    this.winOrLose();\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.matrix;\n  }\n\n  getStatus() {\n    switch (this.status) {\n      case 'idle':\n        startMessage.classList.remove('hidden');\n        loseMessage.classList.add('hidden');\n        winMessage.classList.add('hidden');\n        break;\n      case 'playing':\n        startMessage.classList.add('hidden');\n        loseMessage.classList.add('hidden');\n        winMessage.classList.add('hidden');\n        break;\n      case 'win':\n        winMessage.classList.remove('hidden');\n        // document.removeEventListener('keydown', arrowsToggle);\n        break;\n      case 'lose':\n        loseMessage.classList.remove('hidden');\n        // document.removeEventListener('keydown', arrowsToggle);\n        break;\n      default:\n        break;\n    }\n\n    return this.status;\n  }\n\n  start() {\n    this.createRandomTile();\n    this.createRandomTile();\n\n    this.status = 'playing';\n\n    this.getStatus();\n  }\n\n  restart() {\n    this.matrix = this.#copyState(this.#DEFAULT_STATE);\n    this.status = 'idle';\n\n    this.getStatus();\n\n    this.clearMatrix();\n  }\n\n  // Add your own methods here\n\n  createRandomTile() {\n    const randomDigit = Math.random() < 0.9 ? 2 : 4;\n    const getEmptyTiles = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.matrix[i][j] === 0) {\n          getEmptyTiles.push([i, j]);\n        }\n      }\n    }\n\n    const randomEmptyTile = Math.floor(Math.random() * getEmptyTiles.length);\n    const coordinateEmptyTile = getEmptyTiles[randomEmptyTile];\n\n    this.matrix[coordinateEmptyTile[0]][coordinateEmptyTile[1]] = randomDigit;\n\n    // edit HTML element\n    const getRowWithEmptyTile = document.querySelector(\n      `.field-row:nth-child(${coordinateEmptyTile[0] + 1})`,\n    );\n    const emptyTile = getRowWithEmptyTile.querySelector(\n      `.field-cell:nth-child(${coordinateEmptyTile[1] + 1})`,\n    );\n\n    emptyTile.textContent = randomDigit;\n    emptyTile.classList.add(`field-cell--${randomDigit}`);\n    emptyTile.style.transition = '.5s';\n  }\n\n  getMatrixGroupedByCols() {\n    const groupedMatrix = this.#copyState(this.#DEFAULT_STATE);\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        groupedMatrix[j][i] = this.matrix[i][j];\n      }\n    }\n\n    return groupedMatrix;\n  }\n\n  clearMatrix() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        const getRow = document.querySelector(`.field-row:nth-child(${i + 1})`);\n        const tile = getRow.querySelector(`.field-cell:nth-child(${j + 1})`);\n\n        tile.textContent = '';\n        tile.className = 'field-cell';\n      }\n    }\n  }\n\n  drawTiles() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        const getRow = document.querySelector(`.field-row:nth-child(${i + 1})`);\n        const tile = getRow.querySelector(`.field-cell:nth-child(${j + 1})`);\n\n        tile.textContent = '';\n        tile.className = 'field-cell';\n\n        if (this.matrix[i][j] !== 0) {\n          tile.textContent = `${this.matrix[i][j]}`;\n          tile.classList.add(`field-cell--${this.matrix[i][j]}`);\n        }\n      }\n    }\n  }\n\n  movesAvailable(grid) {\n    const size = grid.length;\n\n    // Check for empty cells\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col < size; col++) {\n        if (grid[row][col] === 0) {\n          return true;\n        }\n      }\n    }\n\n    // Check for possible merges\n    for (let row = 0; row < size; row++) {\n      for (let col = 0; col < size; col++) {\n        if (col < size - 1 && grid[row][col] === grid[row][col + 1]) {\n          return true; // horizontally\n        }\n\n        if (row < size - 1 && grid[row][col] === grid[row + 1][col]) {\n          return true; // vertically\n        }\n      }\n    }\n\n    return false;\n  }\n\n  winOrLose() {\n    if (!this.movesAvailable(this.matrix)) {\n      this.status = 'lose';\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.matrix[i][j] === 2048) {\n          this.status = 'win';\n        }\n      }\n    }\n  }\n}\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","import { _class_apply_descriptor_get } from \"./_class_apply_descriptor_get.js\";\nimport { _class_extract_field_descriptor } from \"./_class_extract_field_descriptor.js\";\n\nexport function _class_private_field_get(receiver, privateMap) {\n    var descriptor = _class_extract_field_descriptor(receiver, privateMap, \"get\");\n    return _class_apply_descriptor_get(receiver, descriptor);\n}\nexport { _class_private_field_get as _ };\n","export function _class_apply_descriptor_get(receiver, descriptor) {\n    if (descriptor.get) return descriptor.get.call(receiver);\n\n    return descriptor.value;\n}\nexport { _class_apply_descriptor_get as _ };\n","export function _class_extract_field_descriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n\n    return privateMap.get(receiver);\n}\nexport { _class_extract_field_descriptor as _ };\n","import { _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nexport function _class_private_field_init(obj, privateMap, value) {\n    _check_private_redeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nexport { _class_private_field_init as _ };\n","export function _check_private_redeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nexport { _check_private_redeclaration as _ };\n","export function _class_private_method_get(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) throw new TypeError(\"attempted to get private field on non-instance\");\n\n    return fn;\n}\nexport { _class_private_method_get as _ };\n","import { _check_private_redeclaration } from \"./_check_private_redeclaration.js\";\n\nexport function _class_private_method_init(obj, privateSet) {\n    _check_private_redeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nexport { _class_private_method_init as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$2f97c2a4ea6269f4$export$5a67b255b80ee4f2","receiver","privateMap","descriptor","action","has","TypeError","get","call","value","$f86983e96b0c893e$export$6b10452b5ac97eba","obj","privateCollection","$ac6739cbe5bf1c84$export$ccedaf978f62b9dd","privateSet","fn","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$3d28d7f1aac198f5$var$startMessage","document","querySelector","$3d28d7f1aac198f5$var$loseMessage","$3d28d7f1aac198f5$var$winMessage","$3d28d7f1aac198f5$var$_DEFAULT_STATE","WeakMap","$3d28d7f1aac198f5$var$_copyState","WeakSet","$3d28d7f1aac198f5$var$copyState","state","map","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","add","writable","set","matrix","status","score","key","_this","getStatus","isChange","group","i1","i2","createRandomTile","drawTiles","winOrLose","slidedMatrix","getMatrixGroupedByCols","j","classList","remove","clearMatrix","randomDigit","Math","random","getEmptyTiles","push","randomEmptyTile","floor","coordinateEmptyTile","emptyTile","getRowWithEmptyTile","concat","textContent","style","transition","groupedMatrix","tile","getRow","className","grid","size","row","col","row1","col1","movesAvailable","$4fc75ccb937ab1df$var$_defineProperties","target","props","enumerable","configurable","defineProperty","$197cd56b15c33885$var$startBtn","$197cd56b15c33885$var$restartBtn","$197cd56b15c33885$var$score","$197cd56b15c33885$var$arrowsToggle","event","moveUp","moveLeft","moveRight","moveDown","addEventListener","start","restart","removeEventListener"],"version":3,"file":"index.9f9d958d.js.map"}